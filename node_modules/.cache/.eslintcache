[{"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/index.tsx":"1","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/reportWebVitals.ts":"2","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/App.tsx":"3","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/redux/store.ts":"4","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/services/thunks.ts":"5","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Home.page.tsx":"6","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Bookmark.page.tsx":"7","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Layout.page.tsx":"8","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Details.page.tsx":"9","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/redux/reducers/pokemon.ts":"10","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/services/request.ts":"11","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/utils/utils.ts":"12","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/SearchBar/SearchBar.tsx":"13","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/index.tsx":"14","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/services/api.tsx":"15","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/hooks/useDebouce.ts":"16","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/Button/Button.tsx":"17","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/PokemonCard/PokemonCard.tsx":"18","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/Skelton/Skelton.tsx":"19","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/PokemonList/PokemonList.tsx":"20","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/PokemonImage.tsx":"21","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/ImageLoading.tsx":"22"},{"size":759,"mtime":1687023411872,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1686636765000,"results":"25","hashOfConfig":"24"},{"size":1869,"mtime":1687024259613,"results":"26","hashOfConfig":"24"},{"size":714,"mtime":1686647351000,"results":"27","hashOfConfig":"24"},{"size":498,"mtime":1686654888000,"results":"28","hashOfConfig":"24"},{"size":571,"mtime":1686663436000,"results":"29","hashOfConfig":"24"},{"size":1474,"mtime":1686662619000,"results":"30","hashOfConfig":"24"},{"size":143,"mtime":1686653888000,"results":"31","hashOfConfig":"24"},{"size":700,"mtime":1686662680000,"results":"32","hashOfConfig":"24"},{"size":2674,"mtime":1686672644000,"results":"33","hashOfConfig":"24"},{"size":202,"mtime":1686654873000,"results":"34","hashOfConfig":"24"},{"size":219,"mtime":1686660695000,"results":"35","hashOfConfig":"24"},{"size":2628,"mtime":1686662983000,"results":"36","hashOfConfig":"24"},{"size":241,"mtime":1686650531000,"results":"37","hashOfConfig":"24"},{"size":124,"mtime":1686638786000,"results":"38","hashOfConfig":"24"},{"size":402,"mtime":1686646844000,"results":"39","hashOfConfig":"24"},{"size":484,"mtime":1686661387000,"results":"40","hashOfConfig":"24"},{"size":3188,"mtime":1687025233257,"results":"41","hashOfConfig":"24"},{"size":1693,"mtime":1686649218000,"results":"42","hashOfConfig":"24"},{"size":1101,"mtime":1687025233257,"results":"43","hashOfConfig":"24"},{"size":913,"mtime":1687008879876,"results":"44","hashOfConfig":"24"},{"size":1004,"mtime":1687024344372,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1oig7yh",{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/index.tsx",[],[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/reportWebVitals.ts",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/App.tsx",["120","121","122","123","124","125"],[],"import React, { useEffect } from 'react'\nimport './App.css'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Spinner from './components/Loading/Spinner'\nimport { fetchAllPokemons, fetchDittoPokemon } from './services/thunks'\nimport { useAppDispatch, useAppSelector } from './redux/store'\nconst Detail = React.lazy(() => import('./Pages/Details.page'))\nconst Bookmark = React.lazy(() => import('./Pages/Bookmark.page'))\nimport { QueryClient, QueryClientProvider, useQuery } from 'react-query'\nimport ImageLoading from './components/ImageLoading'\nimport Home from './Pages/Home.page'\n\nimport { Routes, Route, Outlet, Link } from 'react-router-dom'\nimport Layout from './Pages/Layout.page'\n\nfunction App() {\n  const dispatch = useAppDispatch()\n  const { limit, offset } = useAppSelector((state) => state.pokemon)\n  const fetchPokemons = (newPage: number) => {\n    dispatch(fetchAllPokemons(`offset=${offset}&limit=${newPage}`))\n  }\n  useEffect(() => {\n    fetchPokemons(limit)\n  }, [limit])\n\n  const queryClient = new QueryClient()\n  return (\n    <div className='App'>\n      <Routes>\n        <Route path='/' element={<Layout />}>\n          <Route index element={<Home />} />\n          <Route\n            path='detail/:id'\n            element={\n              <React.Suspense fallback={<>...</>}>\n                <Detail />\n              </React.Suspense>\n            }\n          />\n          <Route\n            path='bookmarks'\n            element={\n              <React.Suspense fallback={<>...</>}>\n                <Bookmark />\n              </React.Suspense>\n            }\n          />\n          <Route path='*' element={<h1>Not found</h1>} />\n        </Route>\n      </Routes>\n      <QueryClientProvider client={queryClient}>\n        <ImageLoading />\n      </QueryClientProvider>\n    </div>\n  )\n}\n\nexport default App\n","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/redux/store.ts",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/services/thunks.ts",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Home.page.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Bookmark.page.tsx",["126","127","128","129"],[],"import React, { useEffect, useState } from 'react'\nimport { getPokemonFromStorage } from '../utils/utils'\nimport { geDittoPokemon } from '../services/request'\nimport { PokemonCard } from '../components'\nimport { toast } from 'react-toastify'\n\nconst Bookmark = () => {\n  const [bookmarkedPokemonList, setBookmarkedPokemonList] = useState<any[]>([])\n  const fetchAllbookmarkedPokemon = async (pokemonList: any) => {\n    const bookmarkedPokemonListData: any[] = []\n    try {\n      for (const pokemon of pokemonList) {\n        const pokemonDetails: any = await geDittoPokemon(pokemon)\n        if (pokemonDetails) {\n          bookmarkedPokemonListData.push(pokemonDetails?.data)\n        }\n      }\n    } catch (error) {\n      toast.error('Error while fetching Pokemon')\n    }\n    setBookmarkedPokemonList(bookmarkedPokemonListData)\n  }\n\n  useEffect(() => {\n    if (getPokemonFromStorage()) {\n      fetchAllbookmarkedPokemon(getPokemonFromStorage())\n    }\n  }, [])\n\n  return (\n    <div className='flex gap-2 items-center justify-center'>\n      {bookmarkedPokemonList?.length ? (\n        bookmarkedPokemonList?.map((bookmarkPokemon) => {\n          return (\n            <PokemonCard\n              key={bookmarkPokemon?.name}\n              name={bookmarkPokemon?.name}\n              id={bookmarkPokemon?.id}\n              isBookmarkIconShown={false}\n            />\n          )\n        })\n      ) : (\n        <div>No Data Found</div>\n      )}\n    </div>\n  )\n}\n\nexport default Bookmark\n","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Layout.page.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/Pages/Details.page.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/redux/reducers/pokemon.ts",["130","131","132","133","134","135","136","137","138","139"],["140"],"import { createSlice } from '@reduxjs/toolkit'\n// eslint-disable-next-line no-duplicate-imports\nimport type { PayloadAction } from '@reduxjs/toolkit'\nimport { fetchAllPokemons, fetchDittoPokemon } from '../../services/thunks'\nimport { toast } from 'react-toastify'\n\nexport interface CounterState {\n  value: number\n  singlePokemon: any,\n  pokemonList: any,\n  loading: any,\n  error: any,\n  limit: number,\n  offset: number\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  singlePokemon: {},\n  pokemonList: {},\n  loading: { singlePokemons: false, allPokemon: false },\n  error: { singlePokemons: '', allPokemon: '' },\n  limit: 10,\n  offset: 1,\n}\n\nexport const pokemonSlice = createSlice({\n  name: 'pokemon',\n  initialState,\n  reducers: {\n    incrementPage: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.offset += 1 + state.offset\n    },\n    decrementPage: (state) => {\n      state.offset -= 1\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchDittoPokemon.pending, (state, action: PayloadAction<any>) => {\n      state.loading.singlePokemons = true\n      // toast.loading('Loading ',{});\n    })\n    builder.addCase(fetchDittoPokemon.fulfilled, (state, action) => {\n      state.loading.singlePokemons = false\n      state.singlePokemon = action.payload\n      toast.success('Successfully added')\n    })\n    builder.addCase(fetchDittoPokemon.rejected, (state, action: PayloadAction<any>) => {\n      state.loading.singlePokemons = false\n      state.error.singlePokemons = action.payload\n      toast.error('Error')\n    })\n    builder.addCase(fetchAllPokemons.pending, (state, action: PayloadAction<any>) => {\n      state.loading.allPokemon = true\n      // toast.loading('Loading ',{});\n    })\n    builder.addCase(fetchAllPokemons.fulfilled, (state, action) => {\n      state.loading.allPokemon = false\n      state.pokemonList = action.payload\n      toast.success('Successfully added')\n    })\n    builder.addCase(fetchAllPokemons.rejected, (state, action: PayloadAction<any>) => {\n      state.loading.allPokemon = false\n      state.error.allPokemon = action.payload\n      toast.error('Error')\n    })\n  },\n\n})\n\n// Action creators are generated for each case reducer function\nexport const { incrementPage, decrementPage, incrementByAmount } = pokemonSlice.actions\n\nexport default pokemonSlice.reducer","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/services/request.ts",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/utils/utils.ts",["141"],[],"export const getPokemonFromStorage = () => {\n  return JSON.parse(localStorage.getItem('pokemon') || '')\n}\nexport const setPokemonToStorage = (value: any[]) => {\n  localStorage.setItem('pokemon', JSON.stringify(value))\n}","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/SearchBar/SearchBar.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/index.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/services/api.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/hooks/useDebouce.ts",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/Button/Button.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/PokemonCard/PokemonCard.tsx",["142","143"],[],"/* eslint-disable no-debugger */\nimport React, { ReactNode, useEffect, useState } from 'react'\nimport { Bookmark } from 'react-feather'\nimport { Link } from 'react-router-dom'\nimport ImageLoading from '../ImageLoading'\nimport { getPokemonFromStorage, setPokemonToStorage } from '../../utils/utils'\n\nconst PokemonCard = ({\n  name,\n  id,\n  isBookmarkIconShown = true,\n}: {\n  name: string\n  id?: string\n  isBookmarkIconShown?: boolean\n}) => {\n  const [isBookmarked, setIsBookmarked] = useState(false)\n\n  const idAlreadyInTheBookmark = (pokemonId: string) => {\n    if (localStorage.getItem('pokemon')) {\n      const intialPokemonBookmarks = getPokemonFromStorage()\n      if (intialPokemonBookmarks.includes(pokemonId)) setIsBookmarked(true)\n      else setIsBookmarked(false)\n    }\n  }\n\n  const savePokemonInBookmark = (id: string) => {\n    if (id) {\n      if (localStorage.getItem('pokemon')) {\n        const intialPokemonBookmarks = getPokemonFromStorage()\n        if (intialPokemonBookmarks.includes(id)) {\n          // we remove the id ,if id already exists in storage\n          const modifiedBookmarkList = [...intialPokemonBookmarks].filter(\n            (bookmark) => bookmark !== id,\n          )\n          setPokemonToStorage(modifiedBookmarkList)\n          setIsBookmarked(false)\n        } else {\n          // we id not found at data already present in storage then this section run to append more data\n          const modifiedBookmarkList = [...intialPokemonBookmarks, id]\n          setPokemonToStorage(modifiedBookmarkList)\n          setIsBookmarked(true)\n        }\n      } else {\n        // if no bookmarked found then this section runs\n        localStorage.setItem('pokemon', JSON.stringify([id]))\n        setIsBookmarked(true)\n      }\n    }\n  }\n  useEffect(() => {\n    if (id) {\n      idAlreadyInTheBookmark(id)\n    }\n  }, [id])\n\n  return (\n    <div className='p-4'>\n      <div className='w-full max-w-sm bg-white border border-gray-200 rounded-lg shadow dark:bg-cyan-800 dark:border-gray-700'>\n        {isBookmarkIconShown ? (\n          <section id='bookmarked_icon'>\n            {isBookmarked ? (\n              <Bookmark\n                size={20}\n                className='cursor-pointer text-red-300 '\n                onClick={() => savePokemonInBookmark(id || '')}\n              />\n            ) : (\n              <Bookmark\n                size={20}\n                className='cursor-pointer '\n                onClick={() => savePokemonInBookmark(id || '')}\n              />\n            )}\n          </section>\n        ) : null}\n\n        <Link to={`/detail/${id}`}>\n          <img className='p-9 rounded-t-lg' src='' alt='product image' />\n\n          <div className='px-5 pb-5'>\n            <h5 className='text-xl font-semibold tracking-tight text-gray-900 dark:text-white'>\n              {name}\n            </h5>\n            <div className='flex items-center mt-2.5 mb-5'>\n              <span className='bg-blue-100 text-blue-900 text-xs font-semibold mr-2 px-2.5 py-0.5 rounded dark:bg-blue-200 dark:text-blue-800 ml-3'>\n                5.0\n              </span>\n            </div>\n          </div>\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonCard\n","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/Skelton/Skelton.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/PokemonList/PokemonList.tsx",["144"],[],"/* eslint-disable no-constant-condition */\nimport React from 'react'\nimport { PokemonCard, Skelton } from '../../components'\n// import PokemonImage from '../PokemonImage'\nimport { useAppSelector } from '../../redux/store'\n\n\nconst PokemonList: React.FC = () => {\n  const { pokemonList, loading } = useAppSelector((state) => state.pokemon)\n  if (loading?.allPokemon)\n    return (\n      <div>\n        <Skelton />\n      </div>\n    )\n\n  return (\n    <section id='pokemon_list' className='flex gap-3 items-center flex-wrap mt-4 '>\n      {Array.isArray(pokemonList?.results) && pokemonList?.results?.length ? (\n        pokemonList?.results?.map((pokemon: any) => {\n          return (\n            <div key={pokemon?.name}>\n              <PokemonCard\n                key={pokemon?.name}\n                name={pokemon?.name}\n                id={pokemon?.url?.split('/')?.slice(-2)?.[0]}\n              />\n              {/* <PokemonImage pokemonName=\"pikachu\"/> */}\n            </div>\n          )\n        })\n      ) : (\n        <div>No Result Found</div>\n      )}\n    </section>\n  )\n}\n\nexport default PokemonList\n","/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/PokemonImage.tsx",[],[],"/Users/admin/Downloads/companyAssignment/react-task-typescript/src/components/ImageLoading.tsx",["145"],[],"import React, { useState } from 'react'\nimport { useQuery } from 'react-query'\n\nconst ImageLoading = () => {\n  // const [imageObjectURL, setImageObjectURL] = useState<string>();\n  const query = useQuery<string | undefined>(\n    ['image', 1],\n    (): Promise<string | undefined> => {\n      return fetch('https://pokeapi.co/api/v2/pokemon?limit=100000&offset=0').then(async (r) => {\n        if (r.status !== 200) {\n          console.log('error')\n        }\n        const b = await r.blob()\n        const cImageObjectURL = URL.createObjectURL(b)\n        console.log(cImageObjectURL)\n        // setImageObjectURL(cImageObjectURL);\n        return cImageObjectURL\n      })\n    },\n    {\n      refetchOnWindowFocus: false,\n    },\n  )\n  return (\n    <div>\n      <div style={{ marginBottom: 150 }}>a</div>\n      {query.isLoading && 'Loading...'}\n      {query.isError && 'Error...'}\n      {query.isSuccess && <img src={query.data ?? ''} width='250px' loading='lazy' />}\n    </div>\n  )\n}\n\nexport default ImageLoading\n",{"ruleId":"146","severity":1,"message":"147","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":24},{"ruleId":"146","severity":1,"message":"150","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":15},{"ruleId":"146","severity":1,"message":"151","line":6,"column":28,"nodeType":"148","messageId":"149","endLine":6,"endColumn":45},{"ruleId":"146","severity":1,"message":"152","line":10,"column":44,"nodeType":"148","messageId":"149","endLine":10,"endColumn":52},{"ruleId":"146","severity":1,"message":"153","line":14,"column":25,"nodeType":"148","messageId":"149","endLine":14,"endColumn":31},{"ruleId":"146","severity":1,"message":"154","line":14,"column":33,"nodeType":"148","messageId":"149","endLine":14,"endColumn":37},{"ruleId":"155","severity":1,"message":"156","line":8,"column":70,"nodeType":"157","messageId":"158","endLine":8,"endColumn":73,"suggestions":"159"},{"ruleId":"155","severity":1,"message":"156","line":9,"column":57,"nodeType":"157","messageId":"158","endLine":9,"endColumn":60,"suggestions":"160"},{"ruleId":"155","severity":1,"message":"156","line":10,"column":38,"nodeType":"157","messageId":"158","endLine":10,"endColumn":41,"suggestions":"161"},{"ruleId":"155","severity":1,"message":"156","line":13,"column":31,"nodeType":"157","messageId":"158","endLine":13,"endColumn":34,"suggestions":"162"},{"ruleId":"155","severity":1,"message":"156","line":9,"column":18,"nodeType":"157","messageId":"158","endLine":9,"endColumn":21,"suggestions":"163"},{"ruleId":"155","severity":1,"message":"156","line":10,"column":16,"nodeType":"157","messageId":"158","endLine":10,"endColumn":19,"suggestions":"164"},{"ruleId":"155","severity":1,"message":"156","line":11,"column":12,"nodeType":"157","messageId":"158","endLine":11,"endColumn":15,"suggestions":"165"},{"ruleId":"155","severity":1,"message":"156","line":12,"column":10,"nodeType":"157","messageId":"158","endLine":12,"endColumn":13,"suggestions":"166"},{"ruleId":"146","severity":1,"message":"167","line":46,"column":56,"nodeType":"148","messageId":"149","endLine":46,"endColumn":82},{"ruleId":"155","severity":1,"message":"156","line":46,"column":78,"nodeType":"157","messageId":"158","endLine":46,"endColumn":81,"suggestions":"168"},{"ruleId":"155","severity":1,"message":"156","line":55,"column":79,"nodeType":"157","messageId":"158","endLine":55,"endColumn":82,"suggestions":"169"},{"ruleId":"146","severity":1,"message":"167","line":60,"column":55,"nodeType":"148","messageId":"149","endLine":60,"endColumn":81},{"ruleId":"155","severity":1,"message":"156","line":60,"column":77,"nodeType":"157","messageId":"158","endLine":60,"endColumn":80,"suggestions":"170"},{"ruleId":"155","severity":1,"message":"156","line":69,"column":78,"nodeType":"157","messageId":"158","endLine":69,"endColumn":81,"suggestions":"171"},{"ruleId":"172","severity":2,"message":"173","line":3,"column":1,"nodeType":"174","messageId":"175","endLine":3,"endColumn":54,"suppressions":"176"},{"ruleId":"155","severity":1,"message":"156","line":4,"column":44,"nodeType":"157","messageId":"158","endLine":4,"endColumn":47,"suggestions":"177"},{"ruleId":"146","severity":1,"message":"178","line":2,"column":17,"nodeType":"148","messageId":"149","endLine":2,"endColumn":26},{"ruleId":"146","severity":1,"message":"179","line":5,"column":8,"nodeType":"148","messageId":"149","endLine":5,"endColumn":20},{"ruleId":"155","severity":1,"message":"156","line":20,"column":45,"nodeType":"157","messageId":"158","endLine":20,"endColumn":48,"suggestions":"180"},{"ruleId":"146","severity":1,"message":"181","line":1,"column":17,"nodeType":"148","messageId":"149","endLine":1,"endColumn":25},"@typescript-eslint/no-unused-vars","'ToastContainer' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'fetchDittoPokemon' is defined but never used.","'useQuery' is defined but never used.","'Outlet' is defined but never used.","'Link' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["182","183"],["184","185"],["186","187"],["188","189"],["190","191"],["192","193"],["194","195"],["196","197"],"'action' is defined but never used.",["198","199"],["200","201"],["202","203"],["204","205"],"no-duplicate-imports","'@reduxjs/toolkit' import is duplicated.","ImportDeclaration","import",["206"],["207","208"],"'ReactNode' is defined but never used.","'ImageLoading' is defined but never used.",["209","210"],"'useState' is defined but never used.",{"messageId":"211","fix":"212","desc":"213"},{"messageId":"214","fix":"215","desc":"216"},{"messageId":"211","fix":"217","desc":"213"},{"messageId":"214","fix":"218","desc":"216"},{"messageId":"211","fix":"219","desc":"213"},{"messageId":"214","fix":"220","desc":"216"},{"messageId":"211","fix":"221","desc":"213"},{"messageId":"214","fix":"222","desc":"216"},{"messageId":"211","fix":"223","desc":"213"},{"messageId":"214","fix":"224","desc":"216"},{"messageId":"211","fix":"225","desc":"213"},{"messageId":"214","fix":"226","desc":"216"},{"messageId":"211","fix":"227","desc":"213"},{"messageId":"214","fix":"228","desc":"216"},{"messageId":"211","fix":"229","desc":"213"},{"messageId":"214","fix":"230","desc":"216"},{"messageId":"211","fix":"231","desc":"213"},{"messageId":"214","fix":"232","desc":"216"},{"messageId":"211","fix":"233","desc":"213"},{"messageId":"214","fix":"234","desc":"216"},{"messageId":"211","fix":"235","desc":"213"},{"messageId":"214","fix":"236","desc":"216"},{"messageId":"211","fix":"237","desc":"213"},{"messageId":"214","fix":"238","desc":"216"},{"kind":"239","justification":"240"},{"messageId":"211","fix":"241","desc":"213"},{"messageId":"214","fix":"242","desc":"216"},{"messageId":"211","fix":"243","desc":"213"},{"messageId":"214","fix":"244","desc":"216"},"suggestUnknown",{"range":"245","text":"246"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"245","text":"247"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"248","text":"246"},{"range":"248","text":"247"},{"range":"249","text":"246"},{"range":"249","text":"247"},{"range":"250","text":"246"},{"range":"250","text":"247"},{"range":"251","text":"246"},{"range":"251","text":"247"},{"range":"252","text":"246"},{"range":"252","text":"247"},{"range":"253","text":"246"},{"range":"253","text":"247"},{"range":"254","text":"246"},{"range":"254","text":"247"},{"range":"255","text":"246"},{"range":"255","text":"247"},{"range":"256","text":"246"},{"range":"256","text":"247"},{"range":"257","text":"246"},{"range":"257","text":"247"},{"range":"258","text":"246"},{"range":"258","text":"247"},"directive","",{"range":"259","text":"246"},{"range":"259","text":"247"},{"range":"260","text":"246"},{"range":"260","text":"247"},[337,340],"unknown","never",[404,407],[451,454],[545,548],[331,334],[351,354],[367,370],[381,384],[1380,1383],[1762,1765],[1976,1979],[2346,2349],[149,152],[648,651]]